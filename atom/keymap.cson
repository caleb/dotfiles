# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
'atom-text-editor.vim-mode.visual-mode':
  'j':      'vim-mode-visual-block:j'
  'k':      'vim-mode-visual-block:k'
  'h':      'vim-mode-visual-block:h'
  'l':      'vim-mode-visual-block:l'
  'I':      'vim-mode-visual-block:I'
  'A':      'vim-mode-visual-block:A'
  'D':      'vim-mode-visual-block:D'
  'C':      'vim-mode-visual-block:C'
  'o':      'vim-mode-visual-block:o'
  'escape': 'vim-mode-visual-block:escape'
  'ctrl-[': 'vim-mode-visual-block:escape'
  'ctrl-c': 'vim-mode-visual-block:escape'
  'ctrl-v': 'vim-mode:activate-blockwise-visual-mode'

'atom-text-editor.vim-mode.command-mode':
  # Cursors
  'ctrl-n': 'editor:add-selection-below'
  'ctrl-p': 'editor:add-selection-above'
  '-':      'tree-view:reveal-active-file'

'atom-workspace':
  'ctrl-l g g': 'open-project-in-tower:open'

#
# Jumpy
#
'atom-text-editor:not(.mini).vim-mode:not(.insert-mode):not(.operator-pending-mode):not(.jumpy-jump-mode)':
  'space': 'jumpy:toggle'

# Disable the other binding
'atom-workspace atom-text-editor:not(.mini)':
  'shift-enter': 'unset'
